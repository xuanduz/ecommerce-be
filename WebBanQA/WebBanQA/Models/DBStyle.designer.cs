#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanQA.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCuaHangBanQA")]
	public partial class DBStyleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertstyle(style instance);
    partial void Updatestyle(style instance);
    partial void Deletestyle(style instance);
    #endregion
		
		public DBStyleDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLCuaHangBanQAConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBStyleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBStyleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBStyleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBStyleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<style> styles
		{
			get
			{
				return this.GetTable<style>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.style")]
	public partial class style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ST_id;
		
		private string _ST_name;
		
		private string _ST_slug;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnST_idChanging(string value);
    partial void OnST_idChanged();
    partial void OnST_nameChanging(string value);
    partial void OnST_nameChanged();
    partial void OnST_slugChanging(string value);
    partial void OnST_slugChanged();
    #endregion
		
		public style()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ST_id
		{
			get
			{
				return this._ST_id;
			}
			set
			{
				if ((this._ST_id != value))
				{
					this.OnST_idChanging(value);
					this.SendPropertyChanging();
					this._ST_id = value;
					this.SendPropertyChanged("ST_id");
					this.OnST_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST_name", DbType="NVarChar(200)")]
		public string ST_name
		{
			get
			{
				return this._ST_name;
			}
			set
			{
				if ((this._ST_name != value))
				{
					this.OnST_nameChanging(value);
					this.SendPropertyChanging();
					this._ST_name = value;
					this.SendPropertyChanged("ST_name");
					this.OnST_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST_slug", DbType="NVarChar(200)")]
		public string ST_slug
		{
			get
			{
				return this._ST_slug;
			}
			set
			{
				if ((this._ST_slug != value))
				{
					this.OnST_slugChanging(value);
					this.SendPropertyChanging();
					this._ST_slug = value;
					this.SendPropertyChanged("ST_slug");
					this.OnST_slugChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
