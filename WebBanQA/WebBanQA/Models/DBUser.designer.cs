#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanQA.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCuaHangBanQA")]
	public partial class DBUserDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DBUserDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLCuaHangBanQAConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBUserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _U_id;
		
		private string _U_Fname;
		
		private string _U_Lname;
		
		private string _U_email;
		
		private string _U_status;
		
		private string _U_add;
		
		private string _U_name;
		
		private string _U_contact;
		
		private System.Nullable<System.DateTime> _U_created;
		
		private string _U_pass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnU_idChanging(string value);
    partial void OnU_idChanged();
    partial void OnU_FnameChanging(string value);
    partial void OnU_FnameChanged();
    partial void OnU_LnameChanging(string value);
    partial void OnU_LnameChanged();
    partial void OnU_emailChanging(string value);
    partial void OnU_emailChanged();
    partial void OnU_statusChanging(string value);
    partial void OnU_statusChanged();
    partial void OnU_addChanging(string value);
    partial void OnU_addChanged();
    partial void OnU_nameChanging(string value);
    partial void OnU_nameChanged();
    partial void OnU_contactChanging(string value);
    partial void OnU_contactChanged();
    partial void OnU_createdChanging(System.Nullable<System.DateTime> value);
    partial void OnU_createdChanged();
    partial void OnU_passChanging(string value);
    partial void OnU_passChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string U_id
		{
			get
			{
				return this._U_id;
			}
			set
			{
				if ((this._U_id != value))
				{
					this.OnU_idChanging(value);
					this.SendPropertyChanging();
					this._U_id = value;
					this.SendPropertyChanged("U_id");
					this.OnU_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Fname", DbType="NVarChar(200)")]
		public string U_Fname
		{
			get
			{
				return this._U_Fname;
			}
			set
			{
				if ((this._U_Fname != value))
				{
					this.OnU_FnameChanging(value);
					this.SendPropertyChanging();
					this._U_Fname = value;
					this.SendPropertyChanged("U_Fname");
					this.OnU_FnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Lname", DbType="NVarChar(200)")]
		public string U_Lname
		{
			get
			{
				return this._U_Lname;
			}
			set
			{
				if ((this._U_Lname != value))
				{
					this.OnU_LnameChanging(value);
					this.SendPropertyChanging();
					this._U_Lname = value;
					this.SendPropertyChanged("U_Lname");
					this.OnU_LnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_email", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string U_email
		{
			get
			{
				return this._U_email;
			}
			set
			{
				if ((this._U_email != value))
				{
					this.OnU_emailChanging(value);
					this.SendPropertyChanging();
					this._U_email = value;
					this.SendPropertyChanged("U_email");
					this.OnU_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string U_status
		{
			get
			{
				return this._U_status;
			}
			set
			{
				if ((this._U_status != value))
				{
					this.OnU_statusChanging(value);
					this.SendPropertyChanging();
					this._U_status = value;
					this.SendPropertyChanged("U_status");
					this.OnU_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_add", DbType="NVarChar(200)")]
		public string U_add
		{
			get
			{
				return this._U_add;
			}
			set
			{
				if ((this._U_add != value))
				{
					this.OnU_addChanging(value);
					this.SendPropertyChanging();
					this._U_add = value;
					this.SendPropertyChanged("U_add");
					this.OnU_addChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_name", DbType="NVarChar(200)")]
		public string U_name
		{
			get
			{
				return this._U_name;
			}
			set
			{
				if ((this._U_name != value))
				{
					this.OnU_nameChanging(value);
					this.SendPropertyChanging();
					this._U_name = value;
					this.SendPropertyChanged("U_name");
					this.OnU_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_contact", DbType="NVarChar(15)")]
		public string U_contact
		{
			get
			{
				return this._U_contact;
			}
			set
			{
				if ((this._U_contact != value))
				{
					this.OnU_contactChanging(value);
					this.SendPropertyChanging();
					this._U_contact = value;
					this.SendPropertyChanged("U_contact");
					this.OnU_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> U_created
		{
			get
			{
				return this._U_created;
			}
			set
			{
				if ((this._U_created != value))
				{
					this.OnU_createdChanging(value);
					this.SendPropertyChanging();
					this._U_created = value;
					this.SendPropertyChanged("U_created");
					this.OnU_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_pass", DbType="NVarChar(200)")]
		public string U_pass
		{
			get
			{
				return this._U_pass;
			}
			set
			{
				if ((this._U_pass != value))
				{
					this.OnU_passChanging(value);
					this.SendPropertyChanging();
					this._U_pass = value;
					this.SendPropertyChanged("U_pass");
					this.OnU_passChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
